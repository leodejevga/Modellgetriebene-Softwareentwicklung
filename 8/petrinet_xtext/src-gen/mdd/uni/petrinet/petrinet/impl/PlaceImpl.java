/**
 * generated by Xtext 2.12.0
 */
package mdd.uni.petrinet.petrinet.impl;

import java.util.Collection;

import mdd.uni.petrinet.petrinet.PTArc;
import mdd.uni.petrinet.petrinet.PetrinetPackage;
import mdd.uni.petrinet.petrinet.Place;
import mdd.uni.petrinet.petrinet.TPArc;
import mdd.uni.petrinet.petrinet.Token;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Place</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link mdd.uni.petrinet.petrinet.impl.PlaceImpl#getName <em>Name</em>}</li>
 *   <li>{@link mdd.uni.petrinet.petrinet.impl.PlaceImpl#getTokens <em>Tokens</em>}</li>
 *   <li>{@link mdd.uni.petrinet.petrinet.impl.PlaceImpl#getOut <em>Out</em>}</li>
 *   <li>{@link mdd.uni.petrinet.petrinet.impl.PlaceImpl#getIn <em>In</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PlaceImpl extends MinimalEObjectImpl.Container implements Place
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getTokens() <em>Tokens</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTokens()
   * @generated
   * @ordered
   */
  protected EList<Token> tokens;

  /**
   * The cached value of the '{@link #getOut() <em>Out</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOut()
   * @generated
   * @ordered
   */
  protected EList<PTArc> out;

  /**
   * The cached value of the '{@link #getIn() <em>In</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIn()
   * @generated
   * @ordered
   */
  protected EList<TPArc> in;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PlaceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PetrinetPackage.Literals.PLACE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PetrinetPackage.PLACE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Token> getTokens()
  {
    if (tokens == null)
    {
      tokens = new EObjectContainmentEList<Token>(Token.class, this, PetrinetPackage.PLACE__TOKENS);
    }
    return tokens;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<PTArc> getOut()
  {
    if (out == null)
    {
      out = new EObjectResolvingEList<PTArc>(PTArc.class, this, PetrinetPackage.PLACE__OUT);
    }
    return out;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<TPArc> getIn()
  {
    if (in == null)
    {
      in = new EObjectResolvingEList<TPArc>(TPArc.class, this, PetrinetPackage.PLACE__IN);
    }
    return in;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PetrinetPackage.PLACE__TOKENS:
        return ((InternalEList<?>)getTokens()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PetrinetPackage.PLACE__NAME:
        return getName();
      case PetrinetPackage.PLACE__TOKENS:
        return getTokens();
      case PetrinetPackage.PLACE__OUT:
        return getOut();
      case PetrinetPackage.PLACE__IN:
        return getIn();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PetrinetPackage.PLACE__NAME:
        setName((String)newValue);
        return;
      case PetrinetPackage.PLACE__TOKENS:
        getTokens().clear();
        getTokens().addAll((Collection<? extends Token>)newValue);
        return;
      case PetrinetPackage.PLACE__OUT:
        getOut().clear();
        getOut().addAll((Collection<? extends PTArc>)newValue);
        return;
      case PetrinetPackage.PLACE__IN:
        getIn().clear();
        getIn().addAll((Collection<? extends TPArc>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PetrinetPackage.PLACE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case PetrinetPackage.PLACE__TOKENS:
        getTokens().clear();
        return;
      case PetrinetPackage.PLACE__OUT:
        getOut().clear();
        return;
      case PetrinetPackage.PLACE__IN:
        getIn().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PetrinetPackage.PLACE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case PetrinetPackage.PLACE__TOKENS:
        return tokens != null && !tokens.isEmpty();
      case PetrinetPackage.PLACE__OUT:
        return out != null && !out.isEmpty();
      case PetrinetPackage.PLACE__IN:
        return in != null && !in.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //PlaceImpl
