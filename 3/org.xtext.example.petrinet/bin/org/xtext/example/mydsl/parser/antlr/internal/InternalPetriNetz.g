/*
 * generated by Xtext 2.12.0
 */
grammar InternalPetriNetz;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.PetriNetzGrammarAccess;

}

@parser::members {

 	private PetriNetzGrammarAccess grammarAccess;

    public InternalPetriNetzParser(TokenStream input, PetriNetzGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Petrinet";
   	}

   	@Override
   	protected PetriNetzGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePetrinet
entryRulePetrinet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPetrinetRule()); }
	iv_rulePetrinet=rulePetrinet
	{ $current=$iv_rulePetrinet.current; }
	EOF;

// Rule Petrinet
rulePetrinet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='petrinet'
		{
			newLeafNode(otherlv_0, grammarAccess.getPetrinetAccess().getPetrinetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPetrinetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPetrinetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPetrinetAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPetrinetAccess().getPlacesPlaceParserRuleCall_3_0());
				}
				lv_places_3_0=rulePlace
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPetrinetRule());
					}
					add(
						$current,
						"places",
						lv_places_3_0,
						"org.xtext.example.mydsl.PetriNetz.Place");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPetrinetAccess().getTransitionsTransitionParserRuleCall_4_0());
				}
				lv_transitions_4_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPetrinetRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_4_0,
						"org.xtext.example.mydsl.PetriNetz.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPetrinetAccess().getArcsArcParserRuleCall_5_0());
				}
				lv_arcs_5_0=ruleArc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPetrinetRule());
					}
					add(
						$current,
						"arcs",
						lv_arcs_5_0,
						"org.xtext.example.mydsl.PetriNetz.Arc");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getPetrinetAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRulePlace
entryRulePlace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlaceRule()); }
	iv_rulePlace=rulePlace
	{ $current=$iv_rulePlace.current; }
	EOF;

// Rule Place
rulePlace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='place'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlaceAccess().getPlaceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPlaceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlaceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPlaceAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPlaceAccess().getTokensTokenParserRuleCall_3_0_0());
					}
					lv_tokens_3_0=ruleToken
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlaceRule());
						}
						add(
							$current,
							"tokens",
							lv_tokens_3_0,
							"org.xtext.example.mydsl.PetriNetz.Token");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getPlaceAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPlaceAccess().getTokensTokenParserRuleCall_3_1_1_0());
						}
						lv_tokens_5_0=ruleToken
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPlaceRule());
							}
							add(
								$current,
								"tokens",
								lv_tokens_5_0,
								"org.xtext.example.mydsl.PetriNetz.Token");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getPlaceAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_7='out'
			{
				newLeafNode(otherlv_7, grammarAccess.getPlaceAccess().getOutKeyword_5_0());
			}
			otherlv_8=':'
			{
				newLeafNode(otherlv_8, grammarAccess.getPlaceAccess().getColonKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPlaceAccess().getOutPTArcParserRuleCall_5_2_0());
					}
					lv_out_9_0=rulePTArc
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlaceRule());
						}
						add(
							$current,
							"out",
							lv_out_9_0,
							"org.xtext.example.mydsl.PetriNetz.PTArc");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getPlaceAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPlaceAccess().getOutPTArcParserRuleCall_5_3_1_0());
						}
						lv_out_11_0=rulePTArc
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPlaceRule());
							}
							add(
								$current,
								"out",
								lv_out_11_0,
								"org.xtext.example.mydsl.PetriNetz.PTArc");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='in'
			{
				newLeafNode(otherlv_12, grammarAccess.getPlaceAccess().getInKeyword_6_0());
			}
			otherlv_13=':'
			{
				newLeafNode(otherlv_13, grammarAccess.getPlaceAccess().getColonKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPlaceAccess().getInTPArcParserRuleCall_6_2_0());
					}
					lv_in_14_0=ruleTPArc
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlaceRule());
						}
						add(
							$current,
							"in",
							lv_in_14_0,
							"org.xtext.example.mydsl.PetriNetz.TPArc");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getPlaceAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPlaceAccess().getInTPArcParserRuleCall_6_3_1_0());
						}
						lv_in_16_0=ruleTPArc
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPlaceRule());
							}
							add(
								$current,
								"in",
								lv_in_16_0,
								"org.xtext.example.mydsl.PetriNetz.TPArc");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getPlaceAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	iv_ruleToken=ruleToken
	{ $current=$iv_ruleToken.current; }
	EOF;

// Rule Token
ruleToken returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTokenAccess().getTokenAction_0(),
					$current);
			}
		)
		otherlv_1='token'
		{
			newLeafNode(otherlv_1, grammarAccess.getTokenAccess().getTokenKeyword_1());
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transition'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='in'
			{
				newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getInKeyword_4_0());
			}
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getColonKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getInPTArcParserRuleCall_4_2_0());
					}
					lv_in_6_0=rulePTArc
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"in",
							lv_in_6_0,
							"org.xtext.example.mydsl.PetriNetz.PTArc");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getInPTArcParserRuleCall_4_3_1_0());
						}
						lv_in_8_0=rulePTArc
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							add(
								$current,
								"in",
								lv_in_8_0,
								"org.xtext.example.mydsl.PetriNetz.PTArc");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_9='out'
			{
				newLeafNode(otherlv_9, grammarAccess.getTransitionAccess().getOutKeyword_5_0());
			}
			otherlv_10=':'
			{
				newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getColonKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getOutTPArcParserRuleCall_5_2_0());
					}
					lv_out_11_0=ruleTPArc
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"out",
							lv_out_11_0,
							"org.xtext.example.mydsl.PetriNetz.TPArc");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getOutTPArcParserRuleCall_5_3_1_0());
						}
						lv_out_13_0=ruleTPArc
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							add(
								$current,
								"out",
								lv_out_13_0,
								"org.xtext.example.mydsl.PetriNetz.TPArc");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleArc
entryRuleArc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArcRule()); }
	iv_ruleArc=ruleArc
	{ $current=$iv_ruleArc.current; }
	EOF;

// Rule Arc
ruleArc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArcAccess().getPTArcParserRuleCall_0_0());
			}
			this_PTArc_0=rulePTArc
			{
				$current = $this_PTArc_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getArcAccess().getTPArcParserRuleCall_0_1());
			}
			this_TPArc_1=ruleTPArc
			{
				$current = $this_TPArc_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_2='arc'
		{
			newLeafNode(otherlv_2, grammarAccess.getArcAccess().getArcKeyword_1());
		}
		(
			(
				lv_weight_3_0=RULE_INT
				{
					newLeafNode(lv_weight_3_0, grammarAccess.getArcAccess().getWeightINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArcRule());
					}
					setWithLastConsumed(
						$current,
						"weight",
						lv_weight_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRulePTArc
entryRulePTArc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPTArcRule()); }
	iv_rulePTArc=rulePTArc
	{ $current=$iv_rulePTArc.current; }
	EOF;

// Rule PTArc
rulePTArc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getPTArcAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPTArcRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getPTArcAccess().getSrcPlaceCrossReference_1_0());
				}
			)
		)
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getPTArcAccess().getGreaterThanSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPTArcRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getPTArcAccess().getTrgTransitionCrossReference_3_0());
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPTArcAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTPArc
entryRuleTPArc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTPArcRule()); }
	iv_ruleTPArc=ruleTPArc
	{ $current=$iv_ruleTPArc.current; }
	EOF;

// Rule TPArc
ruleTPArc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getTPArcAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTPArcRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getTPArcAccess().getTrgPlaceCrossReference_1_0());
				}
			)
		)
		otherlv_2='<'
		{
			newLeafNode(otherlv_2, grammarAccess.getTPArcAccess().getLessThanSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTPArcRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getTPArcAccess().getSrcTransitionCrossReference_3_0());
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTPArcAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
