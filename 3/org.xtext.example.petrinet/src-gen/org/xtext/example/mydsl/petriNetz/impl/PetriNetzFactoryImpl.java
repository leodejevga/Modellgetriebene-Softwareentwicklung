/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.petriNetz.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.petriNetz.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class PetriNetzFactoryImpl extends EFactoryImpl implements PetriNetzFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static PetriNetzFactory init()
  {
    try
    {
      PetriNetzFactory thePetriNetzFactory = (PetriNetzFactory)EPackage.Registry.INSTANCE.getEFactory(PetriNetzPackage.eNS_URI);
      if (thePetriNetzFactory != null)
      {
        return thePetriNetzFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new PetriNetzFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PetriNetzFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case PetriNetzPackage.PETRINET: return createPetrinet();
      case PetriNetzPackage.PLACE: return createPlace();
      case PetriNetzPackage.TOKEN: return createToken();
      case PetriNetzPackage.TRANSITION: return createTransition();
      case PetriNetzPackage.ARC: return createArc();
      case PetriNetzPackage.PT_ARC: return createPTArc();
      case PetriNetzPackage.TP_ARC: return createTPArc();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Petrinet createPetrinet()
  {
    PetrinetImpl petrinet = new PetrinetImpl();
    return petrinet;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Place createPlace()
  {
    PlaceImpl place = new PlaceImpl();
    return place;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Token createToken()
  {
    TokenImpl token = new TokenImpl();
    return token;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Transition createTransition()
  {
    TransitionImpl transition = new TransitionImpl();
    return transition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Arc createArc()
  {
    ArcImpl arc = new ArcImpl();
    return arc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PTArc createPTArc()
  {
    PTArcImpl ptArc = new PTArcImpl();
    return ptArc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TPArc createTPArc()
  {
    TPArcImpl tpArc = new TPArcImpl();
    return tpArc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PetriNetzPackage getPetriNetzPackage()
  {
    return (PetriNetzPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static PetriNetzPackage getPackage()
  {
    return PetriNetzPackage.eINSTANCE;
  }

} //PetriNetzFactoryImpl
